// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using My_App.DataAccess.Data;

#nullable disable

namespace My_App.DataAcces.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250515195155_SeedProductTable")]
    partial class SeedProductTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("My_App.Models.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "SciFi"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "History"
                        });
                });

            modelBuilder.Entity("My_App.Models.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Lana Wachowski",
                            Description = "Sci-fi action movie with virtual reality themes.",
                            ISBN = "ISBN0001",
                            ListPrice = 40.0,
                            Price = 35.0,
                            Price100 = 25.0,
                            Price50 = 30.0,
                            Title = "The Matrix"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Christopher Nolan",
                            Description = "A science fiction exploration of space and time.",
                            ISBN = "ISBN0002",
                            ListPrice = 45.0,
                            Price = 40.0,
                            Price100 = 32.0,
                            Price50 = 36.0,
                            Title = "Interstellar"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Sun Tzu",
                            Description = "Ancient Chinese military treatise.",
                            ISBN = "ISBN0003",
                            ListPrice = 30.0,
                            Price = 28.0,
                            Price100 = 22.0,
                            Price50 = 25.0,
                            Title = "The Art of War"
                        },
                        new
                        {
                            Id = 4,
                            Author = "George Orwell",
                            Description = "Dystopian novel set in a totalitarian future.",
                            ISBN = "ISBN0004",
                            ListPrice = 38.0,
                            Price = 34.0,
                            Price100 = 27.0,
                            Price50 = 30.0,
                            Title = "1984"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Aldous Huxley",
                            Description = "A futuristic society with engineered citizens.",
                            ISBN = "ISBN0005",
                            ListPrice = 42.0,
                            Price = 37.0,
                            Price100 = 29.0,
                            Price50 = 33.0,
                            Title = "Brave New World"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Yuval Noah Harari",
                            Description = "A brief history of humankind.",
                            ISBN = "ISBN0006",
                            ListPrice = 50.0,
                            Price = 45.0,
                            Price100 = 35.0,
                            Price50 = 40.0,
                            Title = "Sapiens"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
